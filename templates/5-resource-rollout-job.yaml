{{- if .Values.gateway.rolloutJob.enabled }}
{{- $image := .Values.gateway.rolloutJob.image }}
{{- if .Values.global }}
{{- $image = merge .Values.gateway.rolloutJob.image .Values.global.image }}
{{- end }}
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app: gloo
    gloo: resource-rollout
  name: gloo-resource-rollout
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "5" # run this job after the role/rolebinding is created
    {{- include "gloo.jobHelmDeletePolicySucceededAndBeforeCreation" .Values.gateway.rolloutJob | nindent 4 }}
spec:
  {{- include "gloo.jobSpecStandardFields" .Values.gateway.rolloutJob | nindent 2 -}}
  template:
    metadata:
      labels:
        gloo: resource-rollout
        sidecar.istio.io/inject: "false"
        {{- if .Values.gateway.rolloutJob.extraPodLabels }}
        {{- range $key, $value := .Values.gateway.rolloutJob.extraPodLabels }}
        {{ $key | quote }}: {{ $value | quote }}
        {{- end }}
        {{- end }}
      {{- if .Values.gateway.rolloutJob.extraPodAnnotations }}
      annotations:
        {{- range $key, $value := .Values.gateway.rolloutJob.extraPodAnnotations }}
        {{ $key | quote }}: {{ $value | quote }}
        {{- end }}
      {{- end }}
    spec:
      {{- include "gloo.pullSecret" $image | nindent 6 -}}
      serviceAccountName: gloo-resource-rollout
      {{- include "gloo.podSpecStandardFields" .Values.gateway.rolloutJob | nindent 6 -}}
      volumes:
        - name: custom-resource-config-volume
          configMap:
            name: gloo-custom-resource-config
            items:
              - key: custom-resources
                path: custom-resources
      containers:
        - name: kubectl
          image: {{template "gloo.image" $image}}
          imagePullPolicy: {{ $image.pullPolicy }}
          env:
            - name: HAS_CUSTOM_RESOURCES
              valueFrom:
                configMapKeyRef:
                  name: gloo-custom-resource-config
                  key: has-custom-resources
          volumeMounts:
            - name: custom-resource-config-volume
              mountPath: /etc/gloo-custom-resources
          securityContext:
            runAsNonRoot: true
            {{- if not .Values.gateway.rolloutJob.floatingUserId }}
            runAsUser: {{ printf "%.0f" (float64 .Values.gateway.rolloutJob.runAsUser) -}}
            {{- end }}
          {{- with .Values.gateway.rolloutJob.resources }}
          resources: {{ toYaml . | nindent 12}}
          {{- end }}
          command:
          - /bin/sh
          - -c
          - |
            {{ if and .Values.gateway.enabled .Values.gateway.validation.enabled .Values.gateway.validation.webhook.enabled -}}
            # if validation webhook is enabled, wait for deployment rollout so validation service will be available
            kubectl rollout status deployment -n {{ .Release.Namespace }} gloo
            {{- end }}

            # apply Gloo Edge custom resources
            if [ $HAS_CUSTOM_RESOURCES == "true" ]
            then
              kubectl apply -f /etc/gloo-custom-resources/custom-resources || exit $?
            else
              echo "no custom resources to apply"
            fi

            # remove the resource-policy annotations that were added temporarily by the gloo-resource-migration job during upgrade
            kubectl annotate upstreams.gloo.solo.io -n {{ $.Release.Namespace }} -l app=gloo helm.sh/resource-policy- || exit $?
            {{- range include "gloo.gatewayNamespaces" $ | fromJsonArray }}
            kubectl annotate gateways.gateway.solo.io -n {{ . }} -l app=gloo helm.sh/resource-policy- || exit $?
            {{- end }}
{{- if .Values.global.glooRbac.create }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: gloo
    gloo: rbac
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "0" # must be created before rollout job
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
  name: gloo-resource-rollout
  namespace: {{ .Release.Namespace }}
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: gloo-resource-rollout
  namespace: {{ .Release.Namespace }}
  labels:
    app: gloo
    gloo: rbac
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "0" # must be created before rollout job
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
rules:
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["gloo.solo.io"]
  resources: ["*"]
  verbs: ["get", "list", "create", "update", "patch"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: gloo-resource-rollout
  namespace: {{ .Release.Namespace }}
  labels:
    app: gloo
    gloo: rbac
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "0" # must be created before rollout job
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
roleRef:
  kind: Role
  name: gloo-resource-rollout
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: gloo-resource-rollout
  namespace: {{ .Release.Namespace }}
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: gloo-resource-rollout{{ include "gloo.rbacNameSuffix" . }}
  labels:
    app: gloo
    gloo: rbac
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "0" # must be created before rollout job
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
rules:
- apiGroups: ["gateway.solo.io"]
  resources: ["*"]
  verbs: ["get", "list", "create", "update", "patch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: gloo-resource-rollout{{ include "gloo.rbacNameSuffix" . }}
  labels:
    app: gloo
    gloo: rbac
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "0" # must be created before rollout job
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
roleRef:
  kind: ClusterRole
  name: gloo-resource-rollout{{ include "gloo.rbacNameSuffix" . }}
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: gloo-resource-rollout
  namespace: {{ .Release.Namespace }}
{{- end -}}{{/* if .Values.global.glooRbac.create */}}
{{- end }}{{/* if .Values.gateway.rolloutJob.enabled  */}}
